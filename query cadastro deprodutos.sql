BEGIN TRY

	BEGIN TRANSACTION

-- 1.	Tabela temporária para armazenar os dados de auditoria

IF OBJECT_ID('tempdb..#TEMP_AUDITORIA') IS NOT NULL
    DROP TABLE #TEMP_AUDITORIA;

CREATE TABLE #TEMP_AUDITORIA (
    DT_CAD		DATE,
    CD_PROD		INT,
    DESCRICAO	VARCHAR(255)
);


-- 2.	Tabela temporária para armazenar o arquivo importado
IF OBJECT_ID('tempdb..#TEMP_PRODUTOS') IS NOT NULL
    DROP TABLE #TEMP_PRODUTOS;

CREATE TABLE #TEMP_PRODUTOS (
    DESCRICAO                  VARCHAR(255),
    DESCRICAO_REDUZIDA         VARCHAR(255),
    FABRICANTE                 VARCHAR(255),
    REGISTRO_MS                INT,
    SITUACAO                   VARCHAR(50),
    GENERICO	               VARCHAR(10),
	SIMILAR	          		   VARCHAR(10),
	ETICO	             	   VARCHAR(10),
    ANVISA                     VARCHAR(100),
    UN_FARMA                   VARCHAR(50),
    UM_MEDIDA                  VARCHAR(50),
    TIPO_RECEITA               VARCHAR(50),
    COR_RECEITA                VARCHAR(50),
    FLAG_CONTROLADO            VARCHAR(10),
    FLAG_PMC                   VARCHAR(10),
    FLAG_ANTIBIOTICO           VARCHAR(10),
    FLAG_SNGPC                 VARCHAR(10),
    FLAG_CONT_LOTE             VARCHAR(10),
    FLAG_ETIQUETA              VARCHAR(10),
    FLAG_RECEITUARIO           VARCHAR(10),
    FLAG_TERMO_LABEL           VARCHAR(10),
    MODALIDADE_COMPRA          INT,
    UNIDADE_COMPRA             VARCHAR(50),
    EMB_COMPRA                 INT,
    QTD_COMPRA                 INT,
    UNIDADE_SAIDA              VARCHAR(50),
    EMB_SAIDA                  INT,
    QTD_SAIDA                  INT,
    ALTURA                     DECIMAL(10,2),
    COMPRIMENTO                DECIMAL(10,2),
    LARGURA                    DECIMAL(10,2),
    CLASS_FISCAL               INT,
    LISTA                      INT,
    NCM                        INT,
    CEST                       INT,
    ORIGEM_PROD                INT,
    DESC_ECOMMERCE             VARCHAR(255),
    CLASSIFICACAO_ECOM         INT,
    EAN                        VARCHAR(100),
    APLICAR_VERBA              VARCHAR(10),
    QT_PONTO_FIDELIDADE        INT,
    PRINCIPIO_ATIVO            INT,
    SUB_CATEG_ARV              INT,
    CATEG_ARV                  INT,
    LINHA_ARV                  INT,
    MARCA_ARV                  INT,
    CLASSIFICACAO_ARV          INT,
    FAMILIA_ARV                INT
);

-- 3.	Importação do CSV
BULK INSERT #TEMP_PRODUTOS
FROM 'G:\Importar_produtos\produtos.csv'
WITH (
    FIRSTROW = 2,
    FIELDTERMINATOR = ';',
    ROWTERMINATOR = '\n',
    CODEPAGE = 'ACP' -- ou '65001' se for UTF-8
);

-- 4.	Declaração das variáveis

DECLARE @CD_PROD			INT,
    @DESCRICAO				VARCHAR(255),
    @DESCRICAO_REDUZIDA		VARCHAR(255),
    @FABRICANTE				VARCHAR(255),
    @REGISTRO_MS			INT,
    @SITUACAO				VARCHAR(50),
	@GENERICO				VARCHAR(10),
	@SIMILAR				VARCHAR(10),
	@ETICO						VARCHAR(10),
    @CLASS_ANVISA					VARCHAR(100),
    @UN_FARMA				VARCHAR(50),
    @UN_ANVISA				VARCHAR(50),
    @TIPO_RECEITA			VARCHAR(50),
    @COR_RECEITA			VARCHAR(50),
    @FLAG_CONTROLADO		VARCHAR(10),
    @FLAG_PMC				VARCHAR(10),
    @FLAG_ANTIBIOTICO		VARCHAR(10),
    @FLAG_SNGPC				VARCHAR(10),
    @FLAG_CONT_LOTE			VARCHAR(10),
    @FLAG_ETIQUETA			VARCHAR(10),
    @FLAG_RECEITUARIO		VARCHAR(10),
    @FLAG_TERMO_LABEL		VARCHAR(10),
    @MODALIDADE_COMPRA		INT,
    @UNIDADE_COMPRA			VARCHAR(50),
    @EMB_COMPRA				INT,
    @QTD_COMPRA				INT,
    @UNIDADE_SAIDA			VARCHAR(50),
    @EMB_SAIDA				INT,
    @QTD_SAIDA				INT,
    @ALTURA					DECIMAL(10,2),
    @COMPRIMENTO			DECIMAL(10,2),
    @LARGURA				DECIMAL(10,2),
    @CLASS_FISCAL			INT,
    @LISTA					INT,
    @NCM					INT,
    @CEST					INT,
    @ORIGEM_PROD			INT,
    @DESC_ECOMMERCE			VARCHAR(255),
    @CLASSIFICACAO_ECOM		INT,
    @EAN					VARCHAR(100),
    @APLICAR_VERBA			VARCHAR(10),
    @QT_PONTO_FIDELIDADE	INT,
    @PRINCIPIO_ATIVO		INT,
    @SUB_CATEG_ARV			INT,
    @CATEGORIA_ARV			INT,
    @LINHA_ARV				INT,
    @MARCA_ARV				INT,
    @CLASSIFICACAO_ARV		INT,
    @FAMILIA_ARV			INT,
	@DT_CAD					DATE = GETDATE();


-- 5.	Declara cursor
DECLARE C_PROD CURSOR FOR
SELECT
    DESCRICAO,
    DESCRICAO_REDUZIDA,
    FABRICANTE,
    REGISTRO_MS,
    SITUACAO,
    GENERICO,
	SIMILAR,
	ETICO,
    ANVISA,
    UN_FARMA,
    UM_MEDIDA,
    TIPO_RECEITA,
    COR_RECEITA,
    FLAG_CONTROLADO,
    FLAG_PMC,
    FLAG_ANTIBIOTICO,
    FLAG_SNGPC,
    FLAG_CONT_LOTE,
    FLAG_ETIQUETA,
    FLAG_RECEITUARIO,
    FLAG_TERMO_LABEL,
    MODALIDADE_COMPRA,
    UNIDADE_COMPRA,
    EMB_COMPRA,
    QTD_COMPRA,
    UNIDADE_SAIDA,
    EMB_SAIDA,
    QTD_SAIDA,
    ALTURA,
    COMPRIMENTO,
    LARGURA,
    CLASS_FISCAL,
    LISTA,
    NCM,
    CEST,
    ORIGEM_PROD,
    DESC_ECOMMERCE,
    CLASSIFICACAO_ECOM
FROM #TEMP_PRODUTOS;

-- 6.	Abre cursor
OPEN PROD_CURSOR;
FETCH NEXT FROM PROD_CURSOR INTO
    @DESCRICAO,
    @DESCRICAO_REDUZIDA,
    @FABRICANTE,
    @REGISTRO_MS,
    @SITUACAO,
	@GENERICO,
	@SIMILAR,
	@ETICO,
    @CLASS_ANVISA,
    @UN_FARMA,
    @UN_ANVISA,
    @TIPO_RECEITA,
    @COR_RECEITA,
    @FLAG_CONTROLADO,
    @FLAG_PMC,
    @FLAG_ANTIBIOTICO,
    @FLAG_SNGPC,
    @FLAG_CONT_LOTE,
    @FLAG_ETIQUETA,
    @FLAG_RECEITUARIO,
    @FLAG_TERMO_LABEL,
    @MODALIDADE_COMPRA,
    @UNIDADE_COMPRA,
    @EMB_COMPRA,
    @QTD_COMPRA,
    @UNIDADE_SAIDA,
    @EMB_SAIDA,
    @QTD_SAIDA,
    @ALTURA,
    @COMPRIMENTO,
    @LARGURA,
    @CLASS_FISCAL,
    @LISTA,
    @NCM,
    @CEST,
    @ORIGEM_PROD,
    @DESC_ECOMMERCE,
    @CLASSIFICACAO_ECOM;

-- 7.	Inicia o laço
WHILE @@FETCH_STATUS = 0
BEGIN
    -- 8. Obter o próximo código de produto via procedure
    --SELECT @CD_PROD = CD_PROD FROM OPENQUERY([SEU_SERVIDOR], 'EXEC P_OBTEM_PROX_COD_PRODUTO');
	EXEC P_OBTEM_PROX_COD_PRODUTO @CD_PROD OUTPUT;

    -- 9. Inserir na EST_PROD
Insert Into EST_PROD(
  CD_EMP, 
  CD_FILIAL, 
  CD_PROD, 
  DS_PROD, 
  DS_USUAL, 
  APRES_EMB_CP, 
  APRES_EMB_VD, 
  PESO_PROD_CP, 
  PESO_PROD_VD, 
  DT_CAD, 
  CD_GRP_SUB, 
  APRES_QT_CP, 
  APRES_QT_VD, 
  CD_USU, 
  CD_MC, 
  CD_APLIC, 
  CD_CLASS_FISC, 
  CD_UN_VD, 
  CD_UN_CP, 
  CD_SC, 
  GERA_BLNC, 
  DIA_VLD, 
  PIS_COFINS, 
  PERC_COMIS, 
  PERC_DESC, 
  GERA_ETQ_RES, 
  CD_FABRIC, 
  VLR_CUSTO_GRP, 
  VLR_COMPRA_GRP, 
  STS_PROD, 
  LISTA_PROD, 
  CD_GRP, 
  QTDE_LITRO, 
  PERC_COMIS_INTERNO, 
  CTR_LOTE, 
  PERC_DESC_FIX, 
  CTR_PMC, 
  NR_NCM, 
  PERC_COMIS_DESC_INT, 
  PERC_COMIS_DESC_EXT, 
  PERC_DESC_FIDEL, 
  COMPRA_POR_SUPRIMENTO, 
  PERC_DESC_FIDEL_MAX, 
  PROMO_INDUSTRIA, 
  PERC_DESC_FINAN, 
  STS_PROD_CALL_CENTER, 
  FLAG_ANALISE_FALTAS, 
  FLAG_VERBA_DESCON, 
  FLAG_PROMO_FORN, 
  QT_UNI_RESSUPRIMENTO, 
  PROD_LIBERADO, 
  PROD_USO_CONT, 
  FLAG_REQUER_RECEIT, 
  FLAG_ALTERAR_PRECO, 
  FLAG_ANALISE_EXC_COB, 
  FLAG_COMPRA_PHARMALINK, 
  FLAG_PRODUTO_CONTROLADO, 
  FLAG_PRODUTO_COTACAO, 
  VLR_COMISSAO_FABRIC, 
  FLAG_VENDA_PERIODICA, 
  FLAG_VENDA_CONSIGNADA, 
  FLAG_IGNORAR_PMC_SUBST, 
  FLAG_DESCONTO_TICKET_BLQ, 
  FLAG_PRODUTO_BLISTER, 
  FLAG_PRODUTO_GENERICO, 
  PERC_DESC_LIMITE, 
  FLAG_PRODUTO_TAXA_ENTREGA, 
  FLAG_VD_CALL_CENTER, 
  FLAG_NAO_APARECER_ESTATISTICA_COMPRA_CLIENTE, 
  FLAG_RESSUPRIMENTO_CAIXA_FECHADA, 
  VLR_PRECO_OPERADOR_LOG, 
  FLAG_NAO_PERMITIR_DEVOLUCAO, 
  FLAG_TROCA_FORNECEDOR, 
  PERC_ALIQ_REA_ESTADUAL, 
  PERC_ALIQ_REA_INTERESTADUAL, 
  NR_ITEM_REA, 
  PERC_COMIS_SERVICO, 
  NR_REG_MS, 
  FLAG_NAO_ANALISAR_CUSTO, 
  FLAG_PROD_DESPESA_ACES, 
  FLAG_NAO_CREDITAR_IMPOSTO, 
  UMM, 
  CD_TP_RECEITA, 
  CD_COR_RECEITA, 
  FLAG_NAO_FACEAR_AUTOMATICO, 
  QT_EMB_FECHADA_CP, 
  QT_EMB_ALTERNATIVA_CP, 
  QT_MES_VALID, 
  FLAG_PRODUTO_ETICO, 
  FLAG_PRODUTO_SIMILAR, 
  ANTIBIOTICO, 
  CONTROLE_SNGPC, 
  TERMO_LABEL, 
  TP_UND_FARMACOTECNICA, 
  TP_UND_ANVISA, 
  TP_CLASS_ANVISA, 
  DADOS_CPL_PACIENTE, 
  ORIGEM_PRODUTO, 
  TIPO_TRIBUTACAO_PIS_COFINS, 
  ALTURA, 
  COMPRIMENTO, 
  LARGURA, 
  TIPO_TRIBUTACAO_PIS_COFINS_ENTRADA, 
  FLAG_EXCECAO_PIS_COFINS, 
  SIGLA_EXCECAO_PIS_COFINS, 
  TP_SERV_PROD, 
  FLAG_TRIB_PIS_COFINS_PROD, 
  CD_CST_PIS_SAIDA, 
  CD_CST_COFINS_SAIDA, 
  CD_CST_PIS_ENTRADA, 
  CD_CST_COFINS_ENTRADA, 
  VLR_PRECO_FRANQUIA, 
  FLAG_PROD_CESTA_BASICA, 
  FLAG_RESSARCIMENTO, 
  FLAG_ADJUDICACAO, 
  FLAG_DIRETO_PDV, 
  QTDE_DIAS_TRATAMENTO_PROD, 
  VLR_FABRICA, 
  FLAG_PERMITE_RESSARCIMENTO_ICMS, 
  NR_CEST, 
  PROD_EXCESSAO_FECOP, 
  PESO_PROD_CP_LIQ, 
  PESO_PROD_VD_LIQ, 
  NR_SERV, 
  FLAG_NAO_ENVIA_ECOMMERCE, 
  CD_TISS, 
  DS_ECOMMERCE, 
  CD_CATEG_ECOMMERCE, 
  CD_SUB_CATEG_ECOMMERCE, 
  CD_DEPTO_ECOMMERCE, 
  CD_CTR_CLAS_ECOMMERCE, 
  LARGURA_ECOMMERCE, 
  COMPRIMENTO_ECOMMERCE, 
  PESO_ECOMMERCE, 
  ALTURA_ECOMMERCE, 
  FLAG_ENV_CORREIOS, 
  QTDE_LIMITE_VENDA, 
  FLAG_ORIG_PROD_NF_ENT, 
  FLAG_NAO_ATUALIZA_GT, 
  CD_MOT_ISENCAO_ANVISA, 
  CD_MOTIVO_STS, 
  FLAG_PROD_KIT, 
  ISENCAO_LANCAMENTO_LOTE, 
  FLAG_AGONISTAS
) 
Values 
  (
    1, --CD_EMP
    9999, --CD_FILIAL
    @CD_PROD, --CD_PROD
    ISNULL(UPPER(@DESCRICAO), 'REVISAR'), --DS_PROD
    ISNULL(UPPER(@DESCRICAO_REDUZIDA), 'REVISAR'), --DS_USUAL
    ISNULL(@EMB_COMPRA,1), --APRES_EMB_CP
    ISNULL(@EMB_SAIDA,1), --APRES_EMB_VD
    0, --PESO_PROD_CP
    0, --PESO_PROD_VD
    @DT_CAD, --DT_CAD
    0, --CD_GRP_SUB
    ISNULL(@QTD_COMPRA,1), --APRES_QT_CP
    ISNULL(@QTD_SAIDA,1), --APRES_QT_VD
    1, --CD_USU
    @MARCA, --CD_MC
    0, --CD_APLIC
    ISNULL(@CLASS_FISCAL,0), --CD_CLASS_FISC
    ISNULL((SELECT TOP 1 CD_CTR_UN FROM EST_PROD_UN_MED WHERE DS_UN = @UNIDADE_SAIDA),1), --CD_UN_VD
    ISNULL((SELECT TOP 1 CD_CTR_UN FROM EST_PROD_UN_MED WHERE DS_UN = @UNIDADE_COMPRA),1), --CD_UN_CP
    0, --CD_SC
    0, --GERA_BLNC
    0, --DIA_VLD
    0, --PIS_COFINS
    0, --PERC_COMIS
    0, --PERC_DESC
    CASE WHEN UPPER(@FLAG_ETIQUETA) = 'SIM' THEN 1 ELSE 0 END, --GERA_ETQ_RES
    ISNULL((SELECT TOP 1 CD_FABRIC FROM EST_PROD_FABRIC WHERE LTRIM(RTRIM(UPPER(NM_FABRIC))) = LTRIM(RTRIM(UPPER(@FABRICANTE)))), 0), --CD_FABRIC
    0, --VLR_CUSTO_GRP
    0, --VLR_COMPRA_GRP
    ISNULL(CASE WHEN UPPER(@SITUACAO) = 'ATIVO' THEN 0 ELSE 1 END, 1), --STS_PROD
    ISNULL(@LISTA,2), --LISTA_PROD
    0, --CD_GRP
    0, --QTDE_LITRO
    0, --PERC_COMIS_INTERNO
    CASE WHEN UPPER(@FLAG_CONT_LOTE) = 'SIM' THEN 1 ELSE 0 END, --CTR_LOTE
    0, --PERC_DESC_FIX
    CASE WHEN UPPER(@FLAG_PMC) = 'SIM' THEN 1 ELSE 0 END, --CTR_PMC
    ISNULL(@NCM,30049069),
    0, --PERC_COMIS_DESC_INT
    0, --PERC_COMIS_DESC_EXT
    0, --PERC_DESC_FIDEL
    0, --COMPRA_POR_SUPRIMENTO
    0, --PERC_DESC_FIDEL_MAX
    0, --PROMO_INDUSTRIA
    0, --PERC_DESC_FINAN
    0, --STS_PROD_CALL_CENTER
    0, --FLAG_ANALISE_FALTAS
    0, --FLAG_VERBA_DESCON
    0, --FLAG_PROMO_FORN
    1, --QT_UNI_RESSUPRIMENTO
    0, --PROD_LIBERADO
    0, --PROD_USO_CONT
    CASE WHEN UPPER(@FLAG_RECEITUARIO) = 'SIM' THEN 1 ELSE 0 END, --FLAG_REQUER_RECEIT
    0, --FLAG_ALTERAR_PRECO
    0, --FLAG_ANALISE_EXC_COB
    ISNULL(@MODALIDADE_COMPRA,0), --FLAG_COMPRA_PHARMALINK
    CASE WHEN UPPER(@FLAG_CONTROLADO) = 'SIM' THEN 1 ELSE 0 END, --FLAG_PRODUTO_CONTROLADO
    0, --FLAG_PRODUTO_COTACAO
    0, --VLR_COMISSAO_FABRIC
    0, --FLAG_VENDA_PERIODICA
    0, --FLAG_VENDA_CONSIGNADA
    0, --FLAG_IGNORAR_PMC_SUBST
    0, --FLAG_DESCONTO_TICKET_BLQ
    0, --FLAG_PRODUTO_BLISTER
    ISNULL(CASE WHEN UPPER(@GENERICO) = 'SIM' THEN 0 ELSE 1 END, 1), --FLAG_PRODUTO_GENERICO
    0, --PERC_DESC_LIMITE
    0, --FLAG_PRODUTO_TAXA_ENTREGA
    0, --FLAG_VD_CALL_CENTER
    0, --FLAG_NAO_APARECER_ESTATISTICA_COMPRA_CLIENTE
    0, --FLAG_RESSUPRIMENTO_CAIXA_FECHADA
    0, --VLR_PRECO_OPERADOR_LOG
    0, --FLAG_NAO_PERMITIR_DEVOLUCAO
    0, --FLAG_TROCA_FORNECEDOR
    0, --PERC_ALIQ_REA_ESTADUAL
    0, --PERC_ALIQ_REA_INTERESTADUAL
    '0', --NR_ITEM_REA
    0, --PERC_COMIS_SERVICO
    @REGISTRO_MS, --NR_REG_MS
    0, --FLAG_NAO_ANALISAR_CUSTO
    0, --FLAG_PROD_DESPESA_ACES
    0, --FLAG_NAO_CREDITAR_IMPOSTO
    1, --UMM
    @TIPO_RECEITA, --CD_TP_RECEITA
    @COR_RECEITA, --CD_COR_RECEITA
    0, --FLAG_NAO_FACEAR_AUTOMATICO
    1, --QT_EMB_FECHADA_CP
    1, --QT_EMB_ALTERNATIVA_CP
    0, --QT_MES_VALID
    ISNULL(CASE WHEN UPPER(@ETICO) = 'SIM' THEN 1 ELSE 0 END, 0), --FLAG_PRODUTO_ETICO
    ISNULL(CASE WHEN UPPER(@SIMILAR) = 'SIM' THEN 0 ELSE 1 END, 1), --FLAG_PRODUTO_SIMILAR
    CASE WHEN UPPER(@FLAG_ANTIBIOTICO) = 'SIM' THEN 1 ELSE 0 END, --ANTIBIOTICO
    CASE WHEN UPPER(@FLAG_SNGPC) = 'SIM' THEN 1 ELSE 0 END, --CONTROLE_SNGPC
    CASE WHEN UPPER(@FLAG_TERMO_LABEL) = 'SIM' THEN 1 ELSE 0 END, --TERMO_LABEL
    @UN_FARMA, --TP_UND_FARMACOTECNICA
    @UN_ANVISA, --TP_UND_ANVISA
    @CLASS_ANVISA, --TP_CLASS_ANVISA
    0, --DADOS_CPL_PACIENTE
    ISNULL(@ORIGEM_PROD,0), --ORIGEM_PRODUTO
    1, --TIPO_TRIBUTACAO_PIS_COFINS
    @ALTURA, --ALTURA
    @COMPRIMENTO, --COMPRIMENTO
    @LARGURA, --LARGURA
    1, --TIPO_TRIBUTACAO_PIS_COFINS_ENTRADA
    0, --FLAG_EXCECAO_PIS_COFINS
    '', --SIGLA_EXCECAO_PIS_COFINS
    -1, --TP_SERV_PROD
    0, --FLAG_TRIB_PIS_COFINS_PROD
    0, --CD_CST_PIS_SAIDA
    0, --CD_CST_COFINS_SAIDA
    0, --CD_CST_PIS_ENTRADA
    0, --CD_CST_COFINS_ENTRADA
    0, --VLR_PRECO_FRANQUIA
    0, --FLAG_PROD_CESTA_BASICA
    0, --FLAG_RESSARCIMENTO
    0, --FLAG_ADJUDICACAO
    0, --FLAG_DIRETO_PDV
    0, --QTDE_DIAS_TRATAMENTO_PROD
    0, --VLR_FABRICA
    0, --FLAG_PERMITE_RESSARCIMENTO_ICMS
    ISNULL(@CEST,1300200), --NR_CEST
    0, --PROD_EXCESSAO_FECOP
    0, --PESO_PROD_CP_LIQ
    0, --PESO_PROD_VD_LIQ
    '',--NR_SERV
    0, --FLAG_NAO_ENVIA_ECOMMERCE
    0, --CD_TISS
    ISNULL(@DESC_ECOMMERCE,'REVISAR'), --DS_ECOMMERCE
    0, --CD_CATEG_ECOMMERCE
    0, --CD_SUB_CATEG_ECOMMERCE
    0, --CD_DEPTO_ECOMMERCE
    ISNULL(@CLASSIFICACAO_ECOM,500),--CD_CTR_CLAS_ECOMMERCE
    0, --LARGURA_ECOMMERCE
    0, --COMPRIMENTO_ECOMMERCE
    0, --PESO_ECOMMERCE
    0, --ALTURA_ECOMMERCE
    0, --FLAG_ENV_CORREIOS
    0, --QTDE_LIMITE_VENDA
    0, --FLAG_ORIG_PROD_NF_ENT
    0, --FLAG_NAO_ATUALIZA_GT
    0, --CD_MOT_ISENCAO_ANVISA
    0, --CD_MOTIVO_STS
    0, --FLAG_PROD_KIT
    0, --ISENCAO_LANCAMENTO_LOTE
    0  --FLAG_AGONISTAS
  )
	
	-- 10. Inserir na EST_PROD_CD_BARRA
	INSERT INTO EST_PROD_CD_BARRA(
	CD_EMP, 
	CD_PROD, 
	CD_BARRA, 
	TP_CD_BARRA, 
	EAN_CAIXA_FECHADA, 
	NAO_EXPORTAR, 
	NAO_USAR_PED_ELETR,
	DT_CAD, QTDE_EMBALAGEM, 
	CD_USU, NAO_ENVIA_WMS, 
	FLAG_PRE_VENCIDOS, 
	FLAG_NAO_ENVIA_NFE, 
	FLAG_NAO_EXPORTAR_ARQUIVO_TERCEIROS, 
	EAN_VALIDO, 
	GTIN
	) 
	VALUES 
	(
		1, 
		@CD_PROD, 
		@EAN, 
		0, 
		0, 
		0, 
		0, 
		@DT_CAD,
		0, 
		1, 
		0, 
		0, 
		0, 
		0, 
		1, 
		0
	)

	-- 11. Verifica se PRINCIPIO_ATIVO está preenchido no CSV e insere na EST_PROD_PRINC_ATIVOS_EST_PROD
	IF (LTRIM(RTRIM(ISNULL(@PRINCIPIO_ATIVO, ''))) <> '')
	BEGIN
		INSERT INTO EST_PROD_PRINC_ATIVOS_EST_PROD (
			CD_EMP,
			CD_PROD,
			CD_PRINC_ATIVOS,
			REVER_VINC,
			DT_SOLI,
			CD_USU,
			DT_REV
		)
		VALUES (
			1,
			@CD_PROD,
			@PRINCIPIO_ATIVO,
			0,
			@DT_CAD,
			1,
			@DT_CAD
		);
	END

	-- 12. Verifica se o produto já existe na EST_PROD_EST_ARV_MERCADOLOGICA e realiza o insert ou update conforme necessidade
	MERGE INTO EST_PROD_EST_ARV_MERCADOLOGICA AS TARGET
	USING (SELECT 
			1 AS CD_EMP, 
			@CD_PROD AS CD_PROD
		) AS SOURCE
	ON (TARGET.CD_EMP = SOURCE.CD_EMP AND TARGET.CD_PROD = SOURCE.CD_PROD)
	
	WHEN MATCHED THEN 
	UPDATE SET
		CD_ARV_MERC_CATEG = @CATEGORIA_ARV,
		CD_ARV_MERC_SEG = 000000,
		CD_ARV_MERC_PAPEL = 000000,
		CD_ARV_MERC_MIX = 000000,
		CD_ARV_MERC_CONSUMO = 000000,
		CD_ARV_MERC_LINHA = @LINHA_ARV,
		CD_ARV_MERC_MTZ_BCG = 000000,
		CD_MC = @MARCA,
		CD_ARV_MERC_FAMILIA = @FAMILIA_ARV,
		CD_USU = 1,
		DT_ULT_ALT = @DT_CAD,
		CD_APRES = 0,
		CD_ARV_MERC_EQUI = 0,
		CD_GRP_EXPO = 0,
		CD_ARV_MERC_CLASSIFICACAO = @CLASSIFICACAO_ARV,
		CD_ARV_MERC_FASE = 0,
		CD_ARV_MERC_GENERO = 0,
		CD_ARV_MERC_CATEG_SUB = @SUB_CATEG_ARV
	
	WHEN NOT MATCHED THEN 
	INSERT (
		CD_EMP,
		CD_PROD,
		CD_ARV_MERC_CATEG,
		CD_ARV_MERC_SEG,
		CD_ARV_MERC_PAPEL,
		CD_ARV_MERC_MIX,
		CD_ARV_MERC_CONSUMO,
		CD_ARV_MERC_LINHA,
		CD_ARV_MERC_MTZ_BCG,
		CD_MC,
		CD_ARV_MERC_FAMILIA,
		CD_USU,
		DT_ULT_ALT,
		CD_APRES,
		CD_ARV_MERC_EQUI,
		CD_GRP_EXPO,
		CD_ARV_MERC_CLASSIFICACAO,
		CD_ARV_MERC_FASE,
		CD_ARV_MERC_GENERO,
		CD_ARV_MERC_CATEG_SUB
	)
	VALUES (
		1,
		@CD_PROD,
		@CATEGORIA_ARV,
		000000,
		000000,
		000000,
		000000,
		@LINHA_ARV,
		000000,
		@MARCA_ARV,
		@FAMILIA_ARV,
		1,
		@DT_CAD,
		0,
		0,
		0,
		@CLASSIFICACAO_ARV,
		0,
		0,
		@SUB_CATEG_ARV
	);
	
	-- 13. Inserir na EST_PROD_CPL para cada filial ativa
	DECLARE CUR_FILIAL CURSOR FOR
	SELECT CD_FILIAL
	FROM PRC_FILIAL
	WHERE STS_FILIAL = 0;
	
	DECLARE @FILIAL INT;
	
	OPEN CUR_FILIAL;
	FETCH NEXT FROM CUR_FILIAL INTO @FILIAL;
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO EST_PROD_CPL (
			CD_EMP, 
			CD_FILIAL, 
			CD_PROD, 
			DT_CAD, 
			CD_USU, 
			SLD_INI, 
			VLR_CONS, 
			VLR_REV, 
			QT_IMP, 
			PERC_IPI, 
			IPI_NF_SAIDA, 
			TP_PROD, 
			QTDE_PONTO_FIDEL, 
			PERC_COMISSAO_SERVICO, 
			PERC_COMIS, 
			APRES_QT_VD, 
			COMPRA_POR_SUPRIMENTO, 
			FLAG_COMPRA_PHARMALINK, 
			VLR_COMISSAO_FABRIC, 
			FLAG_VERBA_DESCON, 
			PERC_DESC_LIMITE, 
			STS_PROD, 
			NR_SERV_MUN, 
			CD_SIGLA, 
			CD_ETQ_PROD
		) 
		VALUES (
			1, 
			@FILIAL, 
			@CD_PROD, 
			@DT_CAD, 
			1, 
			0, 
			0, 
			0, 
			0, 
			0, 
			0, 
			0, 
			@QT_PONTO_FIDELIDADE, 
			0, 
			0, 
			1, 
			0, 
			0, 
			0, 
			@APLICAR_VERBA, -- FLAG_VERBA_DESCON SEMPRE 0 = NÃO USAR
			0, 
			0, 
			'', 
			4, 
			0
		);
	
		FETCH NEXT FROM CUR_FILIAL INTO @FILIAL;
	END
	
	CLOSE CUR_FILIAL;
	DEALLOCATE CUR_FILIAL;

		-- 14. Inserir DADOS DE AUDITORIA
	INSERT INTO #TEMP_AUDITORIA(
		DT_CAD,
		CD_PROD, 
		DESCRICAO 
		) 
	VALUES 
	( 
		@DT_CAD,
		@CD_PROD,
		@DESCRICAO
	)

	--  15. Próxima linha da tabela
     FETCH NEXT FROM C_PROD INTO
        @DESCRICAO,
        @DESCRICAO_REDUZIDA,
        @FABRICANTE,
        @REGISTRO_MS,
        @SITUACAO,
        @SITUACAO,
		@GENERICO,
		@SIMILAR,
        @CLASS_ANVISA,
        @UN_FARMA,
        @UN_ANVISA,
        @TIPO_RECEITA,
        @COR_RECEITA,
        @FLAG_CONTROLADO,
        @FLAG_PMC,
        @FLAG_ANTIBIOTICO,
        @FLAG_SNGPC,
        @FLAG_CONT_LOTE,
        @FLAG_ETIQUETA,
        @FLAG_RECEITUARIO,
        @FLAG_TERMO_LABEL,
        @MODALIDADE_COMPRA,
        @UNIDADE_COMPRA,
        @EMB_COMPRA,
        @QTD_COMPRA,
        @UNIDADE_SAIDA,
        @EMB_SAIDA,
        @QTD_SAIDA,
        @ALTURA,
        @COMPRIMENTO,
        @LARGURA,
        @CLASS_FISCAL,
        @LISTA,
        @NCM,
        @CEST,
        @ORIGEM_PROD,
        @DESC_ECOMMERCE,
        @CLASSIFICACAO_ECOM;
END;

--  16. Finaliza o cursor
CLOSE PROD_CURSOR;
DEALLOCATE PROD_CURSOR;

--  17. Gera relatório

IF OBJECT_ID('tempdb..##TEMP_AUDITORIA_EXPORT') IS NOT NULL
	DROP TABLE ##TEMP_AUDITORIA_EXPORT;

SELECT * INTO ##TEMP_AUDITORIA_EXPORT FROM #TEMP_AUDITORIA;

DECLARE @cmd VARCHAR(1000) = 
    'bcp "SELECT * FROM tempdb.dbo.##TEMP_AUDITORIA_EXPORT" queryout "G:\Importar_produtos\produtos.csv" -c -t; -T -S ' + @@SERVERNAME;

EXEC xp_cmdshell @cmd;



DROP TABLE #TEMP_PRODUTOS;
DROP TABLE #TEMP_AUDITORIA;

COMMIT TRANSACTION;
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION;
    THROW;
END CATCH;
